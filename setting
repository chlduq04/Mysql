[back_log]
갑자기 많은 커넥션 요청에 대한 listen queue 사이즈
OS의 backlog의 갯수에 따르는데 
1. kernel backlog : 시스템 전체에 대한 backlog 를 제한한다. (tcp_max_syn_backlog)
2. socket backlog : socket (port) 당 backlog를 제한한다. (somaxconn)
중에서 2번에 따른다.

[connect_timeout]
커넥션의 데이터를 기다리는 시간

[join_buffer]
(인덱스를 사용하지 않는 조인의) full-join에서 사용하는 버퍼의 크기. 버퍼는 두 테이블 사이에서 각 full-join마다 한번 할당이 된다. 
인덱싱을 추가하지 못할 때 조인 버퍼를 증가시키면 full join의 속도를 향상시킬 수 있다. 
(일반적으로 빠르게 조인을 하는 가장 좋은 방법은 인덱스를 추가하는 것이다)

[max_allowed_packet]
한 패킷의 최대 크기

[max_connections] : https://github.com/chlduq04/Mysql/blob/master/spring
최대 동시 접속 사용자 수

[max_connect_errors]
최대 connection error 카운트. 
지정값을 넘으면 db는 새로운 connection을 거부하기 때문에 
1. connection을 잘 확인하고 튜닝하거나
2. 값을 늘려 서비스가 갑자기 에러가 나는 상황은 피하는것이 좋다.

[max_join_size]
최대 join 크기

[max_sort_length]
BLOB나 TEXT 값으로 정열할때 사용하는 바이트의 숫자. 
max_sort_length 바이트만 사용

[net_buffer_length]
Thread의 buffer 사이즈
MySQL 5.1 이상에서는 변경 불가

[record_buffer]
순차적인 검색을 하는 각 스레드에서 각 검색 테이블에 할당하는 버퍼 크기. 순차적이고 연속적인 검색을 많이 하면 이 값을 증가시켜야 한다.

[sort_buffer]
정렬이 필요한 각 스레드에서 할당하는 버퍼 크기. order by 나 group by 오퍼레이션을 빠르게 하려면 이 값을 증가시킨다.
 
[table_cache]
MySQL 서버에서 사용되어지는 각 테이블의 메타 정보를 담고 있는 캐시이다.
mysqladmin status라는 명령어로 opened_tables 값이 크다면 table_cache값을 증가시켜야 한다.
max_connections 의 1.5 ~ 5배 정도로 설정

[tmp_table_size]
mysqladmin -uroot -p extended-status -r -i 1 | grep -E 'Created_tmp|--'
tmp table file이 많아진다면 메모리에서 처리할 수 없어 디스크 io가 생기기 때문에 늘려주는것이 좋다.

[wait_timeout]
하나의 connection에 대한 wait time
값을 줄여서 급격히 늘어나는 connection에 대한 대비를 할 수 있다.


























[출처]
[MySQL Parameters] back_log|작성자 asdf
https://epthffh.tistory.com/entry/Mysql-성능개선-팁 [물고기 개발자의 블로그]
http://blog.naver.com/PostView.nhn?blogId=kkforgg&logNo=220637591349
